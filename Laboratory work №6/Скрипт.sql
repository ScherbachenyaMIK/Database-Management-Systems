USE Конференции_V2

-- Вычисляем участников заседания 1-2 используя JOIN по id участника
SELECT f.id_заседания, f.id_доклада, p.id_участника, p.ФИО, p.Роль_в_конференции, p.Должность, p.Дата_рождения
FROM Заседание f
JOIN Участники_заседания pf ON f.id_заседания = pf.id_заседания
JOIN Участник p ON pf.id_участника = p.id_участника
WHERE f.id_заседания = 1 OR f.id_заседания = 2
ORDER BY ФИО ASC;

-- Вычисляем возраст участников, выбранных в первом SELECT-е 
SELECT p.ФИО, YEAR(GETDATE()) - YEAR(Дата_рождения) AS Возраст
FROM Заседание f
JOIN Участники_заседания pf ON f.id_заседания = pf.id_заседания
JOIN Участник p ON pf.id_участника = p.id_участника
WHERE f.id_заседания = 1 OR f.id_заседания = 2
ORDER BY ФИО ASC;

-- Вычисляем какие участники - авторы каких докладов
SELECT id_участника, ФИО, email, Должность, id_доклада AS Доклад
FROM Участник
LEFT JOIN Авторы_доклада ON ФИО = ФИО_автора
ORDER BY Доклад DESC;

-- Подсчёт количества авторов у каждого доклада с номерами 1-5
SELECT d.id_доклада, COUNT(ФИО_автора) AS количество_авторов
FROM Доклад d
LEFT JOIN Авторы_доклада ad ON d.id_доклада = ad.id_доклада
GROUP BY d.id_доклада
HAVING d.id_доклада < 5
ORDER BY d.id_доклада;

-- Удаляем существующую запись
DELETE FROM Авторы_доклада
WHERE ФИО_автора = 'Иванов Иван Иванович';

-- И вставляем её же
INSERT INTO Авторы_доклада(id_доклада, ФИО_автора)
VALUES
    (1, 'Иванов Иван Иванович');

-- Обновляем запись
UPDATE Авторы_доклада
SET ФИО_автора = 'Иванов Илья Викторович', id_доклада = '2'
WHERE ФИО_автора = 'Иванов Иван Иванович';

-- Возвращаем на место запись
UPDATE Авторы_доклада
SET ФИО_автора = 'Иванов Иван Иванович', id_доклада = '1'
WHERE ФИО_автора = 'Иванов Илья Викторович';

-- Создание таблицы визитки заседания
SELECT f.id_Заседания, Название, CAST(Резюме AS NVARCHAR(MAX)) AS Резюме, STRING_AGG(ФИО_автора, ', ') AS Авторы
INTO Визитка_заседания
FROM Заседание f
JOIN Доклад d ON f.id_доклада = d.id_доклада
JOIN Авторы_доклада ad ON d.id_доклада = ad.id_доклада
GROUP BY f.id_Заседания, Название, CAST(Резюме AS NVARCHAR(MAX));

-- Выберем данные из неё
SELECT * FROM Визитка_заседания;

-- Удаляем эту таблицу
DROP TABLE Визитка_заседания;

-- Объединение запросов
SELECT id_доклада, Название
FROM Доклад
UNION
SELECT id_доклада, ФИО_автора
FROM Авторы_доклада;

-- Выбор авторов докладов
SELECT id_участника, ФИО, email
FROM Участник
WHERE ФИО IN (
	SELECT ФИО_автора
	FROM Авторы_доклада ad
);

-- Запросы создания таблиц/индексов --
-- CREATE TABLE Участник (
--    id_участника INT PRIMARY KEY,
--    ФИО NVARCHAR(100) NOT NULL,
--    Адрес NVARCHAR(100) NOT NULL,
--    email NVARCHAR(100) NOT NULL,
--    Дата_рождения TIMESTAMP NOT NULL,
--    Должность NVARCHAR(100) NOT NULL,
--    Место_проживания NVARCHAR(100) NOT NULL,
--    Роль_в_конференции NVARCHAR(100) NOT NULL
-- );
--
-- Создание индекса
-- CREATE UNIQUE NONCLUSTERED INDEX ФИО_Участник
-- ON Участник