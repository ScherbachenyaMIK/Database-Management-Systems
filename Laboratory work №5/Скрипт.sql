USE Dormitory

-- Вычисляем номер этажа используя JOIN по номеру комнаты
SELECT s.id, s.ФИО, s.комната, k.номер_этажа
FROM dbo.Студенты s
JOIN Комнаты k ON s.комната =  k.номер_комнаты
WHERE k.номер_этажа = 2
ORDER BY номер_комнаты ASC;

-- Вычисляем номер этажа без JOIN-а по номеру комнаты
SELECT s.id, s.ФИО, s.комната, (s.комната / 100) AS Этаж
FROM dbo.Студенты s
WHERE s.Комната >= 200
ORDER BY Этаж;

-- Ответственные студенты ниже 5 этажа
SELECT * 
FROM (
SELECT id, ФИО, комната, номер_комнаты AS комната_отдыха
FROM Студенты
LEFT JOIN Ответственные_студенты ON id = id_студента
) AS Студенты_Комнаты_Отдыха
WHERE комната < 500
ORDER BY комната_отдыха;

-- Список заселённых комнат ниже 5 этажа
SELECT номер_комнаты
FROM Комнаты
LEFT JOIN Студенты ON номер_комнаты = комната
GROUP BY номер_комнаты
HAVING номер_комнаты < 500
ORDER BY номер_комнаты;

-- Удаляем существующую запись
DELETE FROM Комната_отдыха
WHERE название = N'Зона релаксации';

-- И вставляем её же
INSERT INTO Комната_отдыха (номер_комнаты, название, описание)
VALUES
    (110, N'Зона релаксации', N'Зона релаксации создана для тех, кто ищет уютное место, чтобы расслабиться и забыть о всех проблемах, окунувшись в атмосферу покоя и умиротворения.');

-- Обновляем запись работника
UPDATE Ответственный_персонал
SET ФИО = 'Василевский Василий Васильевич', телефон = '+375292543299'
WHERE обязанности = 6;

-- Возвращаем на место запись
UPDATE Ответственный_персонал
SET ФИО = 'Васильева Елена Сергеевна', телефон = '+375291033298'
WHERE обязанности = 6;

-- Создание таблицы заселённых комнат с количеством проживающих в них студентов
SELECT номер_комнаты, COUNT(комната) AS количество_заселенных
INTO Заселённые_комнаты
FROM Комнаты
LEFT JOIN Студенты ON номер_комнаты = комната
GROUP BY номер_комнаты
HAVING номер_комнаты < 500;

-- Выберем данные из неё
SELECT * FROM Заселённые_комнаты;

-- Удаляем эту таблицу
DROP TABLE Заселённые_комнаты;

-- Объединение запросов
SELECT id, ФИО
FROM Студенты
WHERE национальность = 'белорус'
UNION
SELECT id, ФИО
FROM Ответственный_персонал;

-- Выбор ответственных студентов
SELECT id, ФИО, комната
FROM Студенты
WHERE id IN (
SELECT id_студента
FROM Ответственные_студенты
);

-- Данные запросы были созданы в предыдущей лабораторной --
-- Создание таблицы "Ответственный персонал"
--CREATE TABLE Ответственный_персонал (
--    id BIGINT PRIMARY KEY,
--    обязанности TINYINT NOT NULL,
--    ФИО VARCHAR(100) NOT NULL,
--    телефон CHAR(13) NOT NULL,
--);

-- Создание уникального индекса для номера этажа
--CREATE UNIQUE INDEX уникальный_индекс_обязанностей
--ON Ответственный_персонал (обязанности)